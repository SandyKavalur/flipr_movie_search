{"version":3,"sources":["components/header.js","context/AppReducer.js","context/GlobalState.js","components/favmovieedits.js","components/favmoviecard.js","components/fav.js","components/card.js","components/search.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","state","action","type","favlist","payload","filter","movie","id","initialState","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","Provider","value","watched","addMovieTofavlist","removeMovieFromfavlist","children","FavMovieEdits","useContext","onClick","FavMovieCard","poster_path","src","alt","title","overview","Fav","length","map","Card","favlistDisabled","find","o","release_date","substring","disabled","Search","useState","query","setQuery","results","setResults","placeholder","onChange","e","preventDefault","target","setTimeout","fetch","then","res","json","data","errors","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efcb7f16.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Header = () => {\r\n    return(\r\n        <header>\r\n            <div className=\"container\">\r\n                <div className=\"inner-content\">\r\n                    <div className=\"brand\">\r\n                        <Link to=\"/\">Movie Wishlist</Link>\r\n                    </div>\r\n\r\n                    <ul className=\"nav-links\">\r\n                        <li>\r\n                            <Link to=\"/fav\"> Favourites </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/\" className=\"btn\"> Search</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};","export default (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_MOVIE_TO_favlist\":\r\n            return {\r\n            ...state,\r\n            favlist: [action.payload, ...state.favlist],\r\n            };\r\n        case \"REMOVE_MOVIE_FROM_favlist\":\r\n            return {\r\n            ...state,\r\n            favlist: state.favlist.filter(\r\n                (movie) => movie.id !== action.payload\r\n            ),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n  ","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n// initial state\r\nconst initialState = {\r\n  favlist: [],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = (props) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  const addMovieTofavlist = (movie) => {\r\n    dispatch({ type: \"ADD_MOVIE_TO_favlist\", payload: movie });\r\n  };\r\n\r\n  const removeMovieFromfavlist = (id) => {\r\n    dispatch({ type: \"REMOVE_MOVIE_FROM_favlist\", payload: id });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        favlist: state.favlist,\r\n        watched: state.watched,\r\n        addMovieTofavlist,\r\n        removeMovieFromfavlist,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport {GlobalContext} from \"../context/GlobalState\";\r\n\r\nexport const FavMovieEdits = ({movie, type}) => {\r\n    const {removeMovieFromfavlist} = useContext(GlobalContext);\r\n    return(\r\n        <div className=\"inner-card-controls\">\r\n            {type === 'favlist' && (\r\n                <button className=\"ctrl-btn\"\r\n                    onClick={()=> removeMovieFromfavlist(movie.id)}\r\n                >X</button>\r\n            )}\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { FavMovieEdits } from './favmovieedits';\r\n\r\nexport const FavMovieCard = ({movie, type}) => {\r\n    return(<>\r\n        <div className=\"movie-card\">\r\n            <div className=\"overlay\"></div>\r\n            {movie.poster_path ? (<>\r\n                <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n                    alt={`${movie.title} Poster`}\r\n                />\r\n                \r\n                </>\r\n            ) : (\r\n                <div className=\"filler-poster\"></div>\r\n            )}\r\n            <FavMovieEdits type={type} movie={movie} />\r\n        </div>\r\n        <div className=\"movie-card desc\">\r\n            {`${movie.overview}`}\r\n        </div>\r\n    </>\r\n    );\r\n}; ","import React, { useContext } from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\nimport { FavMovieCard } from './favmoviecard';\r\n\r\nexport const Fav = () => {\r\n    const {favlist} = useContext(GlobalContext);\r\n\r\n    return(\r\n        <div className=\"mavie-page\">\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1 className=\"heading\"><u>My favlist</u></h1>\r\n                </div>\r\n                {favlist.length > 0 ? (\r\n                    <div className=\"movie-grid\">\r\n                        {favlist.map(movie => (\r\n                            <FavMovieCard key={movie.id} movie={movie} type=\"favlist\" />\r\n                        ))}\r\n                    </div>\r\n                ): (\r\n                    <h2 className=\"no-movies\">No movies</h2>\r\n                )}\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, {useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const Card = ({movie}) => {\r\n    const {favlist, addMovieTofavlist} = useContext(GlobalContext);\r\n    const storedMovie = favlist.find(o => o.id === movie.id);\r\n    const favlistDisabled = storedMovie ? true : false;\r\n\r\n    return(\r\n        <div className=\"result-card\">\r\n            <div className=\"poster-wrapper\">\r\n                {movie.poster_path ? (\r\n                    <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n                        alt={`${movie.title} Poster`}\r\n                    />\r\n                ) : (\r\n                    <div className=\"filler-poster\"></div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"info\">\r\n                <div className=\"header\">\r\n                    <h3 className=\"title\">{movie.title}</h3>\r\n                    <h4 className=\"release-date\"> \r\n                        {movie.release_date ? movie.release_date.substring(0, 4) : \"-\"}\r\n                    </h4>\r\n                </div>\r\n                <div className=\"controls\">\r\n                    <button className=\"btn\"\r\n                        disabled={favlistDisabled}\r\n                        onClick={()=> addMovieTofavlist(movie)}\r\n                    >Add to favourites</button>\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, {useState} from 'react';\r\nimport {Card} from './card';\r\n\r\nexport const Search = () => {\r\n    const [query, setQuery] = useState(\"\");\r\n    const [results, setResults] = useState([]);\r\n\r\n    const Change = e => {\r\n        e.preventDefault();\r\n        \r\n        setQuery(e.target.value);\r\n        setTimeout(()=> fetch(\r\n            `https://api.themoviedb.org/3/search/multi?api_key=32319e73af6b201b54f1f7fa47dcece6&language=en-US&page=1&include_adult=false&query=${e.target.value}`\r\n        ).then((res) => res.json())\r\n        .then((data) => {\r\n            if(!data.errors){\r\n                setResults(data.results);\r\n            } else {\r\n                setResults([]);\r\n            }\r\n        }), 2000);\r\n        \r\n    };\r\n\r\n    return(\r\n        <div className=\"add-page\">\r\n            <div className=\"container\">\r\n                <div className=\"add-content\">\r\n                    <div className=\"input-wrapper\">\r\n                        <input type=\"text\"\r\n                            placeholder=\"Search for Movies:\" \r\n                            value={query}\r\n                            onChange={Change}\r\n                        />\r\n                    </div>\r\n                    {results.length > 0 && (\r\n                        <ul className=\"results\">\r\n                            {results.map(movie => (\r\n                                <li key={movie.id}>\r\n                                    <Card movie={movie} />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {Header} from './components/header';\nimport {Fav} from './components/fav';\nimport {Search} from './components/search'\nimport {GlobalProvider} from './context/GlobalState';\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path='/'>\n            <Search />\n          </Route>\n          <Route path='/fav'>\n            <Fav />\n          </Route>\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}